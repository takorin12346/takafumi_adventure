!function(t,s){if("object"==typeof exports&&"object"==typeof module)module.exports=s();else if("function"==typeof define&&define.amd)define([],s);else{var e=s();for(var i in e)("object"==typeof exports?exports:t)[i]=e[i]}}(self,(function(){return(()=>{"use strict";var t={d:(s,e)=>{for(var i in e)t.o(e,i)&&!t.o(s,i)&&Object.defineProperty(s,i,{enumerable:!0,get:e[i]})},o:(t,s)=>Object.prototype.hasOwnProperty.call(t,s),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},s={};t.r(s),t.d(s,{CharacterTile:()=>h,DPad:()=>n,Game:()=>m,Party:()=>d,Scene:()=>c,Sprite:()=>e,Text:()=>r,Tile:()=>i,Tilemap:()=>o});class e{constructor(t,s,e){this.img=new Image,this.img.src=t,this.x=this.y=0,this.width=s||32,this.height=e||32,this.frame=0,this.vx=this.vy=0,this.shiftX=this.shiftY=0,this.rotate=0}update(t){this.render(t),this.onenterframe(),this.x+=this.vx,this.y+=this.vy}render(t){if(this.x+this.shiftX<-1*this.width||this.x+this.shiftX>t.width)return;if(this.y+this.shiftY<-1*this.height||this.y+this.shiftY>t.height)return;const s=this.frame%(this.img.width/this.width),e=~~(this.frame/(this.img.width/this.width)),i=t.getContext("2d"),h=this.x+this.width/2+this.shiftX,n=this.y+this.height/2+this.shiftY;i.save(),i.translate(h,n),i.rotate(this.rotate*Math.PI/180),i.translate(-1*h,-1*n),i.drawImage(this.img,this.width*s,this.height*e,this.width,this.height,this.x+this.shiftX,this.y+this.shiftY,this.width,this.height),i.restore()}getRelactiveFingerPosition(t){const s={x:t.x-this.x-this.shiftX,y:t.y-this.y-this.shiftY},e=(t,s,e)=>s<=t&&t<=e;return!(!e(s.x,0,this.width)||!e(s.y,0,this.height))&&s}assignTouchevent(t,s){const e=this.getRelactiveFingerPosition(s);switch(t){case"touchstart":e&&this.ontouchstart(e.x,e.y);break;case"touchmove":e&&this.ontouchmove(e.x,e.y);break;case"touchend":this.ontouchend(e.x,e.y)}}onenterframe(){}ontouchstart(){}ontouchmove(){}ontouchend(){}}class i extends e{constructor(t,s){super(t,s,s),this.size=s||32,this.mapX=this.mapY=0,this.isSynchronize=!0}isOverlapped(t){if(t instanceof i)return this.mapX===t.mapX&&this.mapY===t.mapY;console.error("Tilemapに追加できるのはTileだけだよ！")}}class h extends i{constructor(t,s){super(t,s),this.direction=0,this.animation=1}render(t){if(this.x+this.shiftX<-1*this.size||this.x+this.shiftX>t.width)return;if(this.y+this.shiftY<-1*this.size||this.y+this.shiftY>t.height)return;const s=t.getContext("2d"),e=this.x+this.width/2+this.shiftX,i=this.y+this.height/2+this.shiftY;s.save(),s.translate(e,i),s.rotate(this.rotate*Math.PI/180),s.translate(-1*e,-1*i),s.drawImage(this.img,this.size*this.animation,this.size*this.direction,this.size,this.size,this.x+this.shiftX,this.y+this.shiftY,this.size,this.size),s.restore()}}class n extends e{constructor(t,s){super(t,s,s),this.size=s,this.arrow={up:!1,down:!1,left:!1,right:!1}}ontouchstart(t,s){this._applyToDPad(t,s)}ontouchmove(t,s){this._applyToDPad(t,s)}ontouchend(t,s){this.frame=0,this.arrow={up:!1,down:!1,left:!1,right:!1}}_applyToDPad(t,s){this.frame=1,this.arrow={up:!1,down:!1,left:!1,right:!1},t>s&&t<this.size-s?(this.arrow.up=!0,this.rotate=0):t>this.size-s&&t<s?(this.arrow.down=!0,this.rotate=180):s>t&&s<this.size-t?(this.arrow.left=!0,this.rotate=270):s>this.size-t&&s<t&&(this.arrow.right=!0,this.rotate=90)}}class a extends Audio{constructor(t){super(t),this.autoplay=!1}start(){this.muted=!1,this.play()}loop(){super.loop=!0,this.start()}stop(){this.pause(),this.currentTime=0}}class r{constructor(t){this.text=t,this.font="游ゴシック体, 'Yu Gothic', YuGothic, sans-serif",this.x=this.y=0,this.vx=this.vy=0,this.baseline="top",this.size=20,this.color="#ffffff",this.weight="normal",this._width=0,this._height=0,this._isCenter=!1,this._isMiddle=!1}center(){return this._isCenter=!0,this}middle(){return this.baseline="middle",this._isMiddle=!0,this}update(t){const s=t.getContext("2d");s.font=`${this.weight} ${this.size}px ${this.font}`,s.fillStyle=this.color,s.textBaseline=this.baseline,this._width=s.measureText(this.text).width,this._height=Math.abs(s.measureText(this.text).actualBoundingBoxAscent)+Math.abs(s.measureText(this.text).actualBoundingBoxDescent),this._isCenter&&(this.x=(t.width-this._width)/2),this._isMiddle&&(this.y=t.height/2),this.render(t,s),this.onenterframe(),this.x+=this.vx,this.y+=this.vy}render(t,s){this.x<-1*this._width||this.x>t.width||this.y<-1*this._height||this.y>t.height+this._height||s.fillText(this.text,this.x,this.y)}getRelactiveFingerPosition(t){let s={x:t.x-this.x,y:t.y-this.y+this._height};"top"!==this.baseline&&"hanging"!==this.baseline||(s={x:t.x-this.x,y:t.y-this.y}),"middle"===this.baseline&&(s={x:t.x-this.x,y:t.y-this.y+this._height/2});const e=(t,s,e)=>s<=t&&t<=e;return!(!e(s.x,0,this._width)||!e(s.y,0,this._height))&&s}assignTouchevent(t,s){const e=this.getRelactiveFingerPosition(s);switch(t){case"touchstart":e&&this.ontouchstart(e.x,e.y);break;case"touchmove":e&&this.ontouchmove(e.x,e.y);break;case"touchend":this.ontouchend(e.x,e.y)}}onenterframe(){}ontouchstart(){}ontouchmove(){}ontouchend(){}}class o{constructor(t,s){this.img=new Image,this.img.src=t,this.x=this.y=0,this.vx=this.vy=0,this.size=s||32,this.data=[],this.tiles=[],this.obstacles=[0]}add(t){t instanceof i?(t.mapX=t.x/this.size,t.mapY=t.y/this.size,t.isSynchronize||(t.mapX=(t.x-this.x)/this.size,t.mapY=(t.y-this.y)/this.size),this.tiles.push(t)):console.error("Tilemapに追加できるのはTileだけだよ！")}hasObstacle(t,s){return this.obstacles.some((e=>e===this.data[s][t]))}update(t){this.render(t),this.onenterframe(),this.x+=this.vx,this.y+=this.vy;for(let s=0;s<this.tiles.length;s++)this.tiles[s].isSynchronize&&(this.tiles[s].shiftX=this.x,this.tiles[s].shiftY=this.y),this.tiles[s].update(t),this.tiles[s].mapX=this.tiles[s].x/this.size,this.tiles[s].mapY=this.tiles[s].y/this.size,this.tiles[s].isSynchronize||(this.tiles[s].mapX=(this.tiles[s].x-this.x)/this.size,this.tiles[s].mapY=(this.tiles[s].y-this.y)/this.size)}render(t){for(let s=0;s<this.data.length;s++){const e=this.size*s+this.y;if(!(e<-1*this.size||e>t.height))for(let i=0;i<this.data[s].length;i++){const h=this.size*i+this.x;if(h<-1*this.size||h>t.width)continue;const n=this.data[s][i]%(this.img.width/this.size),a=~~(this.data[s][i]/(this.img.width/this.size));t.getContext("2d").drawImage(this.img,this.size*n,this.size*a,this.size,this.size,h,e,this.size,this.size)}}}getRelactiveFingerPosition(t){const s={x:t.x-this.x,y:t.y-this.y},e=(t,s,e)=>s<=t&&t<=e;return!(!e(s.x,0,this.size*this.data[0].length)||!e(s.y,0,this.size*this.data.length))&&s}assignTouchevent(t,s){const e=this.getRelactiveFingerPosition(s);if(e){switch(t){case"touchstart":this.ontouchstart(e.x,e.y);break;case"touchmove":this.ontouchmove(e.x,e.y);break;case"touchend":this.ontouchend(e.x,e.y)}for(let e=0;e<this.tiles.length;e++)this.tiles[e].assignTouchevent(t,s)}}onenterframe(){}ontouchstart(){}ontouchmove(){}ontouchend(){}}class c{constructor(){this.objs=[]}add(t){t instanceof e||t instanceof r||t instanceof o?this.objs.push(t):console.error("Sceneに追加できるのはSprite、Text、Tilemapだけだよ！")}update(t){this.onenterframe()}assignTouchevent(t,s){switch(t){case"touchstart":this.ontouchstart(s.x,s.y);break;case"touchmove":this.ontouchmove(s.x,s.y);break;case"touchend":this.ontouchend(s.x,s.y)}for(let e=0;e<this.objs.length;e++)this.objs[e].assignTouchevent(t,s)}onenterframe(){}ontouchstart(){}ontouchmove(){}ontouchend(){}onchangescene(){}}class m{constructor(t,s){this.canvas=document.createElement("canvas"),document.body.appendChild(this.canvas),this.canvas.width=t||320,this.canvas.height=s||320,this.scenes=[],this.currentScene,this.sounds=[],this._isAlreadyTouched=!1,this._hasFinishedSetting=!1,this._preloadPromises=[],this._temporaryCurrentScene,this.input={},this._keys={}}preload(){const t=arguments;for(let s=0;s<t.length;s++)this._preloadPromises[s]=new Promise(((e,i)=>{if(t[s].match(/\.(jpg|jpeg|png|gif)$/i)){let h=new Image;h.src=t[s],h.addEventListener("load",(()=>{e()}),{passive:!0,once:!0}),h.addEventListener("error",(()=>{i(`「${t[s]}」は読み込めないよ！`)}),{passive:!0,once:!0})}else if(t[s].match(/\.(wav|wave|mp3|ogg)$/i)){let h=new a;h.src=t[s],this.sounds[t[s]]=h,this.sounds[t[s]].load(),h.addEventListener("canplaythrough",(()=>{e()}),{passive:!0,once:!0}),h.addEventListener("error",(()=>{i(`「${t[s]}」は読み込めないよ！`)}),{passive:!0,once:!0})}else i(`「${t[s]}」の形式は、プリロードに対応していないよ！`)}))}main(t){Promise.all(this._preloadPromises).then((s=>{t()})).catch((t=>{console.error(t)}))}start(){this.keybind("up","ArrowUp"),this.keybind("down","ArrowDown"),this.keybind("right","ArrowRight"),this.keybind("left","ArrowLeft"),this.currentScene=this.currentScene||this.scenes[0];const t=()=>{const t=Math.min(innerWidth/this.canvas.width,innerHeight/this.canvas.height);this.canvas.style.width=this.canvas.width*t+"px",this.canvas.style.height=this.canvas.height*t+"px"};addEventListener("resize",t,{passive:!0}),t(),this._mainLoop(),this._waitUserManipulation()}_setEventListener(){const t=t=>{t.preventDefault();for(let s in this._keys)switch(t.type){case"keydown":t.key===this._keys[s]&&(this.input[s]=!0);break;case"keyup":t.key===this._keys[s]&&(this.input[s]=!1)}};addEventListener("keydown",t,{passive:!1}),addEventListener("keyup",t,{passive:!1});const s=t=>{t.preventDefault();const s=t.changedTouches[0],e=s.target.getBoundingClientRect(),i={x:(s.clientX-e.left)/e.width*this.canvas.width,y:(s.clientY-e.top)/e.height*this.canvas.height},h=t.type;this.currentScene.assignTouchevent(h,i)};this.canvas.addEventListener("touchstart",s,{passive:!1}),this.canvas.addEventListener("touchmove",s,{passive:!1}),this.canvas.addEventListener("touchend",s,{passive:!1})}_waitUserManipulation(){const t=t=>{t.preventDefault(),this._isAlreadyTouched=!0;const s=[];for(let t in this.sounds)this.sounds[t].load(),this.sounds[t].muted=!0,s.push(this.sounds[t].play());Promise.all(s).then((()=>{for(let t in this.sounds)this.sounds[t].stop()})).catch((t=>{console.log(t)})),setTimeout((()=>{this._setEventListener(),this._hasFinishedSetting=!0}),2e3)};this.canvas.addEventListener("touchstart",t,{passive:!1,once:!0}),addEventListener("keydown",t,{passive:!1,once:!0})}_mainLoop(){const t=this.canvas.getContext("2d");if(t.fillStyle="#000000",t.fillRect(0,0,this.canvas.width,this.canvas.height),this._isAlreadyTouched){if(this._hasFinishedSetting){this.currentScene.update(),this._temporaryCurrentScene!==this.currentScene&&this.currentScene.onchangescene();for(let t=0;t<this.currentScene.objs.length;t++)this.currentScene.objs[t].update(this.canvas);this._temporaryCurrentScene=this.currentScene}}else this.startPanel();requestAnimationFrame(this._mainLoop.bind(this))}startPanel(){const t="タップ、またはなにかキーを押してね！",s=this.canvas.width/20,e=this.canvas.getContext("2d"),i=e.measureText(t).width;e.font=`normal ${s}px 游ゴシック体, 'Yu Gothic', YuGothic, sans-serif`,e.textBaseline="middle",e.fillStyle="#aaaaaa",e.fillText(t,(this.canvas.width-i)/2,this.canvas.height/2)}add(t){t instanceof c?this.scenes.push(t):console.error("Gameに追加できるのはSceneだけだよ！")}keybind(t,s){this._keys[t]=s,this.input[t]=!1}}class d{constructor(){this.member=arguments,this.speed=1}setMemberDirection(){for(let t=1;t<this.member.length;t++)this.member[t-1].mapX<this.member[t].mapX?this.member[t].direction=1:this.member[t-1].mapX>this.member[t].mapX?this.member[t].direction=2:this.member[t-1].mapY<this.member[t].mapY?this.member[t].direction=3:this.member[t-1].mapY>this.member[t].mapY&&(this.member[t].direction=0)}setMemberVelocity(t){for(let s=1;s<this.member.length;s++){let e,i,h,n,a,r,o;"up"===t?(e=0,i=1,h=-1,n=0,a=1,r=2,o=-1):"down"===t?(e=0,i=-1,h=-1,n=-2,a=1,r=0,o=1):"left"===t?(e=1,i=0,h=0,n=-1,a=2,r=1,o=-1):"right"===t&&(e=-1,i=0,h=-2,n=-1,a=0,r=1,o=1),this.member[s-1].mapX===this.member[s].mapX&&(this.member[s].vx=this.speed*e),this.member[s-1].mapY===this.member[s].mapY&&(this.member[s].vy=this.speed*i),this.member[s-1].mapX<this.member[s].mapX&&(this.member[s].vx=this.speed*h,"left"===t&&this.member[s].mapX-this.member[s-1].mapX>1&&(this.member[s].vx=this.speed*o)),this.member[s-1].mapX>this.member[s].mapX&&(this.member[s].vx=this.speed*a,"right"===t&&this.member[s-1].mapX-this.member[s].mapX>1&&(this.member[s].vx=this.speed*o)),this.member[s-1].mapY<this.member[s].mapY&&(this.member[s].vy=this.speed*n,"up"===t&&this.member[s].mapY-this.member[s-1].mapY>1&&(this.member[s].vy=this.speed*o)),this.member[s-1].mapY>this.member[s].mapY&&(this.member[s].vy=this.speed*r,"down"===t&&this.member[s-1].mapY-this.member[s].mapY>1&&(this.member[s].vy=this.speed*o))}}}return s})()}));
